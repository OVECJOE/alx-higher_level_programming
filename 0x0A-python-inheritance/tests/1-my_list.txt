# import the required class
>>> MyList = __import__("1-my_list").MyList
>>> l = MyList()
>>> type(l)
<class '1-my_list.MyList'>
>>> isinstance(MyList, list)
False
>>> issubclass(MyList, list)
True
>>> l.print_sorted()
[]
>>> l.append(1)
>>> l.print_sorted()
[1]
>>> l.extend([2, 3, 4])
>>> l.print_sorted()
[1, 2, 3, 4]
>>> l.extend((5, 6))
>>> l.print_sorted()
[1, 2, 3, 4, 5, 6]
>>> l.append(-1)
>>> l.print_sorted()
[-1, 1, 2, 3, 4, 5, 6]
>>> l = MyList([-3, -2, -4, 1, 0])
>>> l.print_sorted()
[-4, -3, -2, 0, 1]
>>> l = MyList([7, 7, 7])
>>> l.print_sorted()
[7, 7, 7]
>>> l = MyList((2, 3, 4, 1))
>>> l.print_sorted()
[1, 2, 3, 4]
>>> l = MyList(2, 3)
Traceback (most recent call last):
TypeError: list expected at most 1 argument, got 2
>>> l = MyList()
>>> l.append(1)
>>> l.append("s")
>>> l.print_sorted()
Traceback (most recent call last):
TypeError: '<' not supported between instances of 'str' and 'int'
>>> l.pop()
's'
>>> l.append([2])
>>> l.print_sorted()
Traceback (most recent call last):
TypeError: '<' not supported between instances of 'list' and 'int'
>>> l.print_sorted([5, 2])
Traceback (most recent call last):
TypeError: print_sorted() takes 1 positional argument but 2 were given
>>> l = MyList([1, 3, 2, 4])
>>> print(l)
[1, 3, 2, 4]
>>> isinstance(l.print_sorted(), list)
[1, 2, 3, 4]
False
